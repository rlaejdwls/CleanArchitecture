package com.example.cleanarchitecture.task;

import android.os.Handler;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

/**
 * Created by Hwang on 2018-03-23.
 *
 * Description :
 */
//public class UseCaseThreadPoolScheduler implements UseCaseScheduler {
//    private final Handler handler = new Handler();
//    public static final int POOL_SIZE = 2;
//    public static final int MAX_POOL_SIZE = 4;
//    public static final int TIMEOUT = 20;
//
//    private ThreadPoolExecutor pool;
//
//    public UseCaseThreadPoolScheduler () {
//        this.pool = new ThreadPoolExecutor(POOL_SIZE, MAX_POOL_SIZE, TIMEOUT, TimeUnit.SECONDS, new ArrayBlockingQueue<>(POOL_SIZE));
//    }
//
//    @Override
//    public void execute(Runnable runnable) {
//        this.pool.execute(runnable);
//    }
//    @Override
//    public <REQ extends UseCase.ResponseValue> void notifyResponse(REQ response, UseCase.OnResponseListener<REQ> onResponse) {
//        handler.post(() -> onResponse.onSuccess(response));
//    }
//    @Override
//    public <REQ extends UseCase.ResponseValue> void onError(int code, String message, UseCase.OnResponseListener<REQ> onResponse) {
//        handler.post(() -> onResponse.onError(code, message));
//    }
//}
